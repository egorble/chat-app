require('dotenv').config();

// –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —á–∞—Ç—ñ–≤
async function testLoadChats() {
  console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —á–∞—Ç—ñ–≤...');
  
  const testUserAddress = '0x233c8C54F25734B744E522bdC1Eed9cbc8C97D0c';
  console.log('üë§ –¢–µ—Å—Ç–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:', testUserAddress);
  
  try {
    // –í–∏–∫–ª–∏–∫ API
    const response = await fetch(`http://localhost:3000/api/load-chats?userAddress=${testUserAddress}`);
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const data = await response.json();
    
    console.log('‚úÖ API –≤—ñ–¥–ø–æ–≤—ñ–¥—å –æ—Ç—Ä–∏–º–∞–Ω–æ');
    console.log('üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å —á–∞—Ç—ñ–≤:', data.chats?.length || 0);
    
    if (data.chats && data.chats.length > 0) {
      console.log('üìã –ó–Ω–∞–π–¥–µ–Ω—ñ —á–∞—Ç–∏:');
      data.chats.forEach((chat, index) => {
        console.log(`  ${index + 1}. ${chat.title} (ID: ${chat.chatId})`);
        console.log(`     –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: ${chat.messages?.length || 0}`);
        console.log(`     –û–Ω–æ–≤–ª–µ–Ω–æ: ${chat.updatedAt}`);
      });
    } else {
      console.log('‚ùå –ß–∞—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
    }
    
    console.log('üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É
testLoadChats();